{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Hiremotely Code Challenge API",
    "description" : "Create, Submit and Retrieve Code Challenge Tests",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://code.hiremotely.com/"
  } ],
  "paths" : {
    "/test" : {
      "post" : {
        "tags" : [ "Create and Retrieve Coding Test" ],
        "summary" : "create test",
        "description" : "This method will create a resource which can be accessesd on",
        "parameters" : [ {
          "name" : "hash",
          "description" : "hash will be unique and send from hiremotely database for each user",
          "required" : true,
          "style" : "from"
        }, {
          "name" : "position",
          "in" : "query",
          "description" : "for example, junior, senior, lead",
          "required" : true,
          "style" : "form"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/test/{hash}/{page}" : {
      "get" : {
        "tags" : [ "Create and Retrieve Coding Test" ],
        "summary" : "display a question per request",
        "description" : "display a question per page, once the user submit the answer the next page will be displayed",
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "SHA256 hash of Test Document",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "path",
          "description" : "1,2,3",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Test"
                }
              }
            }
          }
        }
      }
    },
    "/test/{hash}/{testId}" : {
      "post" : {
        "tags" : [ "Save the result" ],
        "summary" : "save the answer",
        "description" : "save automatically once the timer stop, or the user clicked on submit button.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "answer",
          "description" : "answer of the question",
          "schema" : {
            "type" : "object",
            "required" : [ "testId", "answer", "languageId" ],
            "properties" : {
              "testId" : {
                "type" : "string"
              },
              "answer" : {
                "type" : "string"
              },
              "languageId" : {
                "type" : "string"
              }
            }
          }
        } ]
      }
    },
    "/test/{hash}/result" : {
      "get" : {
        "tags" : [ "display test result" ],
        "summary" : "returns text/html page of Result by hash",
        "description" : "This request returns text/html result of Code Challenge Test",
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "SHA256 hash of Test",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "200" : null,
            "description" : "Details about all product categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "allOf" : [ {
                      "$ref" : "#/components/schemas/TestResult"
                    } ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Technologies" : {
        "type" : "string",
        "description" : "Supported technologies.",
        "enum" : [ "java", "javascript", "php" ]
      },
      "Test" : {
        "type" : "object",
        "properties" : {
          "question" : {
            "type" : "string",
            "description" : "Qeustion"
          },
          "duration" : {
            "type" : "string",
            "description" : "20 minutes"
          },
          "start_timer" : {
            "type" : "string",
            "description" : "timer count down"
          }
        }
      },
      "TestResult" : {
        "type" : "object",
        "properties" : {
          "hash" : {
            "type" : "string",
            "description" : "SHA256 hash of Test Document."
          },
          "question" : {
            "type" : "string",
            "description" : "Question."
          },
          "answer" : {
            "type" : "string",
            "description" : "code answer"
          },
          "duration" : {
            "type" : "string",
            "description" : "10 min"
          },
          "start_time" : {
            "type" : "string",
            "description" : "start timer will be calculated on the server"
          },
          "end_time" : {
            "description" : "end timer will eb calculated once the user submit the code",
            "type" : "string"
          },
          "total_test_case" : {
            "type" : "number",
            "description" : "number of test case"
          },
          "success_test_case" : {
            "description" : "number of passed test cases"
          },
          "testcases" : {
            "type" : "array",
            "description" : "Array of testcases.",
            "items" : {
              "$ref" : "#/components/schemas/TestCaseResult"
            }
          }
        }
      },
      "SubmitTest" : {
        "type" : "object",
        "properties" : {
          "questionsId" : {
            "type" : "string"
          },
          "technology" : {
            "type" : "string",
            "description" : "Selected Technology in Code Challenge Editor",
            "enum" : [ "java", "javascript", "php" ]
          },
          "code" : {
            "type" : "string"
          }
        }
      },
      "Question" : {
        "type" : "object",
        "properties" : {
          "questionId" : {
            "type" : "string",
            "description" : "Question ID."
          },
          "snippets" : {
            "type" : "array",
            "description" : "Array of Snippets.",
            "items" : {
              "$ref" : "#/components/schemas/Snippet"
            }
          },
          "testcases" : {
            "type" : "array",
            "description" : "Array of TestCases.",
            "items" : {
              "$ref" : "#/components/schemas/TestCase"
            }
          }
        }
      },
      "Snippet" : {
        "type" : "object",
        "properties" : {
          "technology" : {
            "type" : "string",
            "description" : "Snippet code Technology.",
            "enum" : [ "java", "javascript", "php" ]
          },
          "code" : {
            "type" : "string",
            "description" : "Snippet source code."
          }
        }
      },
      "TestCase" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of Test Case."
          },
          "input" : {
            "type" : "string",
            "description" : "Standard input for a program."
          },
          "expectedOutput" : {
            "type" : "string",
            "description" : "Expected output of a program."
          }
        }
      },
      "TestCaseResult" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of Test Case."
          },
          "input" : {
            "type" : "string",
            "description" : "Standard input for a program."
          },
          "expectedOutput" : {
            "type" : "string",
            "description" : "Expected output of a program."
          },
          "status" : {
            "type" : "object",
            "description" : "status of test case",
            "properties" : {
              "id" : {
                "type" : "number",
                "description" : "3-accepted 4-wrong answer"
              },
              "description" : {
                "type" : "string",
                "description" : "Accepted or Wrong Answer"
              }
            }
          },
          "time" : {
            "type" : "string",
            "description" : "the time it took to run"
          },
          "memory" : {
            "type" : "string",
            "description" : "how much memory it took to run"
          },
          "givenOutput" : {
            "type" : "string",
            "description" : "the out of of judge0 API"
          }
        }
      }
    }
  }
}