{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Hiremotely Code Challenge API",
    "description": "A Code Challenge API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Hiremotely Team",
      "email": "tomi.babyak@hiremotely.com",
      "url": "http://swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/compile": {
      "post": {
        "description": "Compiles source code sent in body parameter",
        "operationId": "compileCode",
        "parameters": [
          {
            "name": "code",
            "in": "body",
            "description": "User submited code",
            "required": true,
            "schema": {
              "$ref":"#/definitions/Submit"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Compiled successfuly response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/submit": {
      "post": {
        "description": "Submits source, run tests for code sent in body parameter and returns Test Report",
        "operationId": "submmitCode",
        "parameters": [
          {
            "name": "code",
            "in": "body",
            "description": "User submited code",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "body",
            "description": "Language ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Test report response",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/questions": {
      "get": {
        "tags": ["Questions"],
        "description": "Returns all questions from the system that the user has access to",
        "operationId": "getQuestions",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Hireotely user key",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "question response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Question"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Questions"],
        "description": "Creates a new question in the store.  Duplicates are allowed",
        "operationId": "addQuestion",
        "parameters": [
          {
            "name": "question",
            "in": "body",
            "description": "Quetion to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewQuestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "question response",
            "schema": {
              "$ref": "#/definitions/Question"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/questions/{id}": {
      "get": {
        "tags": ["Questions"],
        "description": "Returns a user based on a single ID, if the user does not have access to the question",
        "operationId": "find question by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of question to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "question response",
            "schema": {
              "$ref": "#/definitions/Question"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": ["Questions"],
        "description": "Deletes a single question based on the ID supplied",
        "operationId": "deleteQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of question to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "question deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NewQuestion": {
      "type": "object",
      "required": [
        "question",
        "snippets"
      ],
      "properties": {
        "question": {
          "type": "string"
        },
        "snippets": {
          "type": "array",
          "items" : {
            "$ref" : "#/definitions/Snippet"
          }
        },
        "tests": {
          "type":"object",
          "items": {
            "$ref": "#/definistions/Test"
          }
        }
      }
    },
    "Question": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewQuestion"
        },
        {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "Snippet": {
      "type":"object",
      "required": [
        "language",
        "snippet"
      ],
      "properties": {
        "language": {
          "type": "integer"
        },
        "snippet": {
          "type": "string"
        }
      }
    },
    "Test": {
      "type":"object",
      "required": [
        "text",
        "input",
        "output"
      ],
      "properties": {
        "text": {
          "type": "string"
        },
        "input": {
          "type": "string"
        },
        "output": {
          "type": "string"
        }
      }
    },
    "Result": {
      "type": "array",
      "items" : {
        "$ref" : "#/definitions/TestResult"
      }
    },
    "TestResult": {
      "type":"object",
      "properties": {
        "test": {
          "schema": {
            "$ref": "#/definitions/Test"
          }
        },
        "passed": {
          "type": "boolean"
        }
      }
    },
    "Submit": {
      "type":"object",
      "properties": {
        "code": {
          "type":"string"
        },
        "language": {
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}